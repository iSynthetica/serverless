dist: xenial
language: node_js
node_js:
  - 10
addons:
  snaps:
    - name: aws-cli
      classic: true
      channel: latest/stable

before_script:
  - 'npm install -g serverless'
  - 'serverless --version'
  - 'sudo apt-get update && sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg'
  - 'curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null'
  - 'AZ_REPO=$(lsb_release -cs) && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list'
  - 'sudo apt-get update && sudo apt-get install azure-cli'
  - 'az --version'
  - 'aws --version'
  - 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_MB_FBE}'
  - 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_MB_FBE}'
  - 'export AWS_REGION=${AWS_DEFAULT_REGION_MB_FBE}'
  - 'npm install'
  - 'cd controllers && npm install && cd ..'
  - 'cd integration/azure && npm install && cd ../..'
  - 'cd integration/google && npm install'
  - 'cp credentials-sample.json credentials.json'
  - 'sed -i "s|#google_private_key_id#|${google_private_key_id}|" "credentials.json"'
  - 'sed -i "s|#google_private_key#|${google_private_key}|" "credentials.json"'
  - 'sed -i "s|#google_client_id#|${google_client_id}|" "credentials.json"'
  - 'mkdir ~/.gcloud'
  - 'mv credentials.json ~/.gcloud/credentials.json'
  - 'head -n -0 ~/.gcloud/credentials.json'
  - 'cd ../..'
  - 'rsync -r controllers/ integration/aws/dependencies/nodejs'
  - 'rsync -r controllers/ integration/azure/controllers'
  - 'rsync -r controllers/ integration/google/controllers'

jobs:
  include:
    - stage: deploy
      name: Deploy Milkbox Funnels Backend to Staging
      env: environment=staging
      script:
        - cd integration/aws
        - serverless deploy --stage staging -v
        - cd ../..
        - cd integration/azure
        - serverless deploy --stage staging -v
        - cd ../..
        - cd integration/google
        - serverless deploy --stage staging -v
        - cd ../..
